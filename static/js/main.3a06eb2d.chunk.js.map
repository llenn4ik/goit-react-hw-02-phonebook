{"version":3,"sources":["components/contactForm.js","components/contactList.js","components/Filter.js","App.js","index.js","styles.module.css"],"names":["INITIAL_CONTACT_STATE","name","number","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","addContact","props","this","onSubmit","type","placeholder","onChange","required","pattern","Component","ContactList","contacts","onRemoveContact","map","id","className","s","contact_list_item","key","button_contact","onClick","Filter","onChangeFilter","CONTACTS_DATA","App","filter","newContact","uuidv4","contact","includes","alert","changeFilter","getSavedContacts","toLowerCase","removeContact","taskId","prevState","visibleContacts","length","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3a06eb2d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst INITIAL_CONTACT_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = INITIAL_CONTACT_STATE;\r\n\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ).isRequired,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { addContact } = this.props;\r\n\r\n    addContact({ name, number });\r\n    this.setState({ ...INITIAL_CONTACT_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"phone\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n            placeholder=\"645-17-79\"\r\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Sign up as {name}</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../styles.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={s.contact_list_item} key={id}>\r\n        <p>\r\n          {\" \"}\r\n          {name}: {number}\r\n        </p>\r\n\r\n        <button\r\n          className={s.button_contact}\r\n          type=\"button\"\r\n          onClick={() => onRemoveContact(id)}\r\n        >\r\n          Delete contact\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div>\r\n      Find contacts by name or number\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n    onChangeFilter: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/contactForm\";\nimport ContactList from \"./components/contactList\";\nimport Filter from \"./components/Filter\";\n\nconst CONTACTS_DATA = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nclass App extends Component {\n  state = {\n    contacts: CONTACTS_DATA,\n\n    filter: \"\",\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const nameList = contacts.map((contact) => contact.name);\n    if (nameList.includes(name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(({ contacts }) => {\n      return {\n        contacts: [...contacts, newContact],\n      };\n    });\n  };\n  // ==============\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getSavedContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.number.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (taskId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== taskId),\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getSavedContacts();\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <ContactForm addContact={this.addContact} />\n\n        {contacts.length > 1 && (\n          <>\n            <h2>Contacts</h2>\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\n          </>\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            onRemoveContact={this.removeContact}\n            contacts={visibleContacts}\n          />\n        )}\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list_item\":\"styles_contact_list_item__3Lsfy\"};"],"sourceRoot":""}